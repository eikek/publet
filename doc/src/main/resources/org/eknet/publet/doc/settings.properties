## publet settings file
## --------------------
##
## Comments are starting with two `##` symbols. Default values start
## with one `#`.
##
##

## The application name is used inside the default nav bar
## and also added to the page title in the default layout.
#applicationName=Project

## Default Layout settings
## -----------------------
##
## The default layout looks at this file for some values before
## falling back to some default value. They are listed here with
## the default values.
#publet.highlightTheme=googlecode
#publet.searchForSidebar=true
#publet.searchForHeadIncludes=true
#publet.useHighlightJs=true

## Redirects
## ---------
##
## Redirect settings are declaring certain urls to be redirected
## immediately to another URL.
## The keys must start with "redirect." and name the URL to be
## redirected. The value is the target URL.
##
## Examples:
## redirect./welcome.html=/main/stuff/welcome.html
## redirect./main/welcome.html=/main/stuff/welcome.html

## Login Template
## --------------
##
## Publet redirects to this template on unauthenticated errors
## that allows the user to login and proceed with the request.
##
## Change the default template here.
#publet.loginUrl=/publet/templates/login.jade

## Partition definition
## --------------------
##
## Defines what partitions are mounted into the content tree. There
## are two types of partitions available:
##
## 1. "fs" = "file system": This creates a plain folder on the
##    server and hooks it into the content tree.
## 2. "git" = "git repository": This creates a git repository
##    and a working copy on the server. On each update a commit
##    is issued to the bare repository. The repository is also
##    available via http.
##
## You need to specify the type, the directory (which is a relative
## directory name) and a list of mount points. The mount points can
## be separated by whitespace, comma or semicolon.
##
## The `contentroot` git partition is always mounted (and created).
## These settings here only affect additional partitions.
##
## The list must use subsequent numbers, as the lookup process
## stops if a `partition.x.type` key does not exist for some x,
## while x is incremented by one.
##
## Examples:
##
## partition.0.type=fs
## partition.0.dir=parts/files
## partition.0.mounts=/files,/dav/files
##
## partition.1.type=git
## partition.1.dir=wiki/eike
## partition.1.mounts=/wikis/eike,/dav/wikis/eike
##
## partition.2.type=fs
## partition.2.dir=artifacts/maven2
## partition.2.mounts=/maven2


## Webdav Filter
## -------------
##
## Allows to specify a list of URI inside the content tree
## that are served by the webdav filter.
##
## Resources below those configured paths are only available
## via webdav from outside. Since they must be mounted in the
## content tree, server templates can still access them.
##
## The list must use subsequent numbers, once no filter for
## a number exists, the lookup process stops.
##
## Examples:
## webdav.filter.0=/dav/wikis/eike
## webdav.filter.1=/maven2
## webdav.filter.2=/dav/files


## Webdav Realm
##
## The realm name that is used with the BASIC authentication scheme
## issued by the webdav filter.
##
#webdav.realmName=WebDav Area


## Counter Extension
## -----------------
##
## The counter extension counts access to resources. You can
## specify a list of ip addresses that should be discarded
## (maybe you don't want to count your own accesses...)
##
## A value of `true` will black-list the ip, a value of
## `false` yields in counting accesses from this ip.
##
## By default, accesses from all ips are taken into account.
##
## Examples:
## ext.counter.blacklist.110.110.110.110=true
## ext.counter.blacklist.127.0.0.1=true