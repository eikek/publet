publet {

  server {
    bindAddress = "localhost"
    port = 8088
  }

  plugins += org.eknet.publet.webapp.TestPlugin
  plugins += org.eknet.publet.scalate.ScalatePlugin
  plugins += org.eknet.publet.gitr.GitrPlugin
  plugins += org.eknet.publet.webapp.WebappPlugin

  mounts = [
    {
      # mount temp directories below $tempdir
      uri = "tmp://testpartition"
      paths = [ "/temp" ]
    }
  ]

  scalate-engine {
    default {
      allow-caching = false
      import-statements = [
        "import org.eknet.publet.webapp.PubletWeb",
        "import org.eknet.publet.webapp.PubletWebExt"
      ]
      patterns = [ "/**" ]
    }
  }
  scalascript-engine {
    import-statements = [
      "import org.eknet.publet.graphdb.GraphdbExt",
      "import org.eknet.publet.graphdb.GraphdbExtImpl",
      "import org.eknet.publet.webapp.PubletWeb",
      "import org.eknet.publet.webapp.PubletWebExt"
    ]
  }

  publetweb {
    #base url
    url-base = "http://"${publet.server.bindAddress}":"${publet.server.port}

    # either "development" or "production".
    run-mode = "production"

    #where the asset extension lives
    assets-base-path = /publet/assets

    # List if FQCN of all extensions to include
    extensions = [ "org.eknet.publet.webapp.TestRouteSupplier" ]
  }
}
